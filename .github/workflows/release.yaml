name: Release

on:
  push:
    tags:
      - 'v*'
jobs:
  release:
    permissions:
      contents: write # required for creating GH release
      id-token: write # required for reading vault secrets
    runs-on: ubuntu-latest
    steps:
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        registry: ${{ vars.PUBLIC_REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.ref_name}}
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22.x
    - name: Lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.61
    - name: Verify
      run: |
        make verify
    - name: Test
      run: |
        make test
    - name: Go Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # required for creating GH release
        TAG: ${{ github.ref_name }}
        COMMIT: ${{ github.sha }}
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: "~> v2"
        args: release --clean --verbose
    - name: Image Push
      run: |
        make image-push
      env:
        TAG: ${{ github.ref_name }}
        REPO: ${{ vars.PUBLIC_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}
    - name: Upload Charts
      env:
        TAG: ${{ github.ref_name }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # required for updating GH release
      run: |
        make chart
        for f in $(find dist/artifacts/ -name '*.tgz'); do
          echo "Uploading $f to GitHub release $TAG"
          gh release upload $TAG $f
        done
        echo "Charts successfully uploaded to GitHub release $TAG"
