name: CI
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Hangar Branch (Ex. `main` or `dev`)'
        default: 'main'
        required: true
jobs:
  validation-test:
    runs-on: org-cnrancher-runner-dind-x64
    services:
      registry:
        image: "registry:2"
        ports:
          - 5000:5000
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.23.x
    - name: Login to DockerHub # Avoid Rate Limit
      uses: docker/login-action@v3
      with:
        registry: ${{ vars.PUBLIC_REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y util-linux libgpgme-dev libassuan-dev \
          libbtrfs-dev libdevmapper-dev pkg-config gcc iproute2
    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - name: Setup pytest dependencies
      run: |
        set -x
        pip install pytest tox
        pip install -r test/requirements.txt
    - name: Flake check
      env:
        REGISTRY_URL: 127.0.0.1:5000
      run: |
        cd test/
        tox -e flake8
    - name: Build single target
      env:
        TAG: ${{ github.ref_name }}
        COMMIT: ${{ github.sha }}
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: "~> v2"
        args: build --clean --snapshot --single-target
    - name: Setup testing environment
      run: |
        set -x
        sudo mkdir -p /etc/containers/registries.d
        sudo cp package/default-policy.json /etc/containers/policy.json
        sudo cp package/registries.d/default.yaml /etc/containers/registries.d/default.yaml
        sudo cp ./dist/hangar_linux_amd64*/hangar /usr/local/bin/
        # TODO: Workaround for permission denied when accessing '/run/containers/1001/auth.json'
        sudo mkdir -p /run/containers/$UID
        sudo chmod 755 /run/
        sudo chmod 755 /run/containers
        sudo chmod 755 /run/containers/$UID
        sudo chown $UID /run/containers/$UID
        sudo ls -al /run/containers/$UID

        hangar version
        echo "Done setup validation test environment"
    - name: Distribution Registry Validation test
      env:
        REGISTRY_URL: 127.0.0.1:5000
      run: |
        cd test/
        tox -e distribution_registry
